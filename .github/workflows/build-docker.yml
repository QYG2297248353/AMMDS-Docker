name: Build & Publish Docker Images

on:
  push:
    branches:
      - release
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      ref_name:
        description: '镜像标签（如 v1.6.10）'
        required: true
        default: 'v1.0.0'

env:
  REPO_DOCKERHUB: docker.io/qyg2297248353/ammds
  REPO_GHCR:      ghcr.io/qyg2297248353/ammds

jobs:
  # 1. 先统一计算 TAG，并输出给后续作业
  set-tag:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.calc_tag.outputs.tag }}
    steps:
      - id: calc_tag
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "tag=${{ github.event.inputs.ref_name }}" >> $GITHUB_OUTPUT
          elif [ "${{ github.event_name }}" = "release" ]; then
            echo "tag=${{ github.event.release.tag_name }}" >> $GITHUB_OUTPUT
          else
            BRANCH=${GITHUB_REF#refs/heads/}
            echo "tag=$BRANCH" >> $GITHUB_OUTPUT
          fi

  # 1.5. 检查 multi-arch 镜像是否已存在，决定是否跳过后续单架构构建
  check-images:
    needs: set-tag
    runs-on: ubuntu-latest
    outputs:
      skip_build: ${{ steps.check.outputs.skip_build }}
    steps:
      - name: Login DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Check if multi-arch manifest exists on DockerHub
        id: check
        run: |
          TAG=${{ needs.set-tag.outputs.tag }}
          if docker manifest inspect ${{ env.REPO_DOCKERHUB }}:$TAG > /dev/null 2>&1; then
            echo "skip_build=true" >> $GITHUB_OUTPUT
          else
            echo "skip_build=false" >> $GITHUB_OUTPUT
          fi

  # 2a. 构建 amd64 单架构镜像 —— 仅在 skip_build == false 时执行
  build-amd64:
    needs: [set-tag, check-images]
    if: ${{ needs.check-images.outputs.skip_build == 'false' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
      # … (clone, QEMU, buildx, login steps as before) …
      - name: Build & push amd64 image
        uses: docker/build-push-action@v4
        with:
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.REPO_DOCKERHUB }}:${{ needs.set-tag.outputs.tag }}-amd64
            ${{ env.REPO_GHCR }}:${{ needs.set-tag.outputs.tag }}-amd64

  # 2b. 构建 arm64 单架构镜像 —— 仅在 skip_build == false 时执行
  build-arm64:
    needs: [set-tag, check-images]
    if: ${{ needs.check-images.outputs.skip_build == 'false' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
      # … (clone, QEMU, buildx, login steps as before) …
      - name: Build & push arm64 image
        uses: docker/build-push-action@v4
        with:
          platforms: linux/arm64
          push: true
          tags: |
            ${{ env.REPO_DOCKERHUB }}:${{ needs.set-tag.outputs.tag }}-arm64
            ${{ env.REPO_GHCR }}:${{ needs.set-tag.outputs.tag }}-arm64

  # 3. 构建完成后生成并推送 multi-arch Manifest —— always runs (so manifest is refreshed even if skip_build==true)
  create-manifest:
    needs: [set-tag, check-images, build-amd64, build-arm64]
    if: ${{ needs.set-tag.outputs.tag != '' }}
    runs-on: ubuntu-latest
    steps:
      - name: Login DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUBTOKEN }}

      - name: Create & push DockerHub multi-arch manifest
        run: |
          TAG=${{ needs.set-tag.outputs.tag }}
          docker manifest create ${{ env.REPO_DOCKERHUB }}:$TAG \
            --amend ${{ env.REPO_DOCKERHUB }}:$TAG-amd64 \
            --amend ${{ env.REPO_DOCKERHUB }}:$TAG-arm64
          docker manifest push ${{ env.REPO_DOCKERHUB }}:$TAG

          # 更新 latest 为同一 multi-arch
          docker manifest create ${{ env.REPO_DOCKERHUB }}:latest \
            --amend ${{ env.REPO_DOCKERHUB }}:$TAG-amd64 \
            --amend ${{ env.REPO_DOCKERHUB }}:$TAG-arm64
          docker manifest push ${{ env.REPO_DOCKERHUB }}:latest

      - name: Create & push GHCR multi-arch manifest
        run: |
          TAG=${{ needs.set-tag.outputs.tag }}
          docker manifest create ${{ env.REPO_GHCR }}:$TAG \
            --amend ${{ env.REPO_GHCR }}:$TAG-amd64 \
            --amend ${{ env.REPO_GHCR }}:$TAG-arm64
          docker manifest push ${{ env.REPO_GHCR }}:$TAG

          # 更新 latest 为同一 multi-arch
          docker manifest create ${{ env.REPO_GHCR }}:latest \
            --amend ${{ env.REPO_GHCR }}:$TAG-amd64 \
            --amend ${{ env.REPO_GHCR }}:$TAG-arm64
          docker manifest push ${{ env.REPO_GHCR }}:latest
