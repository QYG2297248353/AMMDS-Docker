name: build docker ol8 image

on:
  push:
    branches:
      - release
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      ref_name:
        description: '镜像标签（如 v1.6.10）'
        required: true
        default: 'v1.0.0'

env:
  REPO_DOCKERHUB: docker.io/qyg2297248353/ammds
  REPO_GHCR:      ghcr.io/qyg2297248353/ammds

jobs:
  # 1. 先统一计算出 TAG，并通过 outputs 传递给下游 jobs
  set-tag:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.set_tag.outputs.tag }}
    steps:
      - id: set_tag
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "tag=${{ github.event.inputs.ref_name }}" >> $GITHUB_OUTPUT
          elif [ "${{ github.event_name }}" = "release" ]; then
            echo "tag=${{ github.event.release.tag_name }}" >> $GITHUB_OUTPUT
          else
            BRANCH=${GITHUB_REF#refs/heads/}
            echo "tag=$BRANCH" >> $GITHUB_OUTPUT
          fi

  # 2. AMD64 构建
  build-amd64:
    needs: set-tag
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Clone AMMDS source without LFS files
        run: |
          git lfs install --skip-smudge
          git clone https://x-access-token:${{ secrets.GITHUBTOKEN }}@github.com/QYG2297248353/AMMDS.git ammds-source
          cd ammds-source
          git lfs pull --exclude="*"

      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2

      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUBTOKEN }}

      - name: Build and push amd64-ol8 image
        uses: docker/build-push-action@v4
        with:
          context: ./ammds-source
          file:    ./ammds-source/Dockerfile-OL8
          platforms: linux/amd64
          push:      true
          tags: |
            ${{ env.REPO_DOCKERHUB }}:${{ needs.set-tag.outputs.tag }}-ol8-amd64
            ${{ env.REPO_GHCR }}:${{ needs.set-tag.outputs.tag }}-ol8-amd64

  # 3. ARM64 构建
  build-arm64:
    needs: set-tag
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Clone AMMDS source without LFS files
        run: |
          git lfs install --skip-smudge
          git clone https://x-access-token:${{ secrets.GITHUBTOKEN }}@github.com/QYG2297248353/AMMDS.git ammds-source
          cd ammds-source
          git lfs pull --exclude="*"

      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2

      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUBTOKEN }}

      - name: Build and push arm64-ol8 image
        uses: docker/build-push-action@v4
        with:
          context: ./ammds-source
          file:    ./ammds-source/Dockerfile-OL8
          platforms: linux/arm64
          push:      true
          tags: |
            ${{ env.REPO_DOCKERHUB }}:${{ needs.set-tag.outputs.tag }}-ol8-arm64
            ${{ env.REPO_GHCR }}:${{ needs.set-tag.outputs.tag }}-ol8-arm64

  # 4. Multi-arch manifest（可选，如果需要）
  create-manifest:
    needs: [build-amd64, build-arm64]
    if: github.event_name == 'workflow_dispatch' || (github.event_name == 'release' && github.event.release.target_commitish == 'master')
    runs-on: ubuntu-latest
    steps:
      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUBTOKEN }}

      - name: Create and push DockerHub multi-arch manifest
        run: |
          TAG=${{ needs.set-tag.outputs.tag }}
          docker manifest create ${{ env.REPO_DOCKERHUB }}:$TAG \
            --amend ${{ env.REPO_DOCKERHUB }}:$TAG-ol8-amd64 \
            --amend ${{ env.REPO_DOCKERHUB }}:$TAG-ol8-arm64
          docker manifest push ${{ env.REPO_DOCKERHUB }}:$TAG
          # 更新 latest
          docker manifest create ${{ env.REPO_DOCKERHUB }}:latest \
            --amend ${{ env.REPO_DOCKERHUB }}:$TAG-ol8-amd64 \
            --amend ${{ env.REPO_DOCKERHUB }}:$TAG-ol8-arm64
          docker manifest push ${{ env.REPO_DOCKERHUB }}:latest

      - name: Create and push GHCR multi-arch manifest
        run: |
          TAG=${{ needs.set-tag.outputs.tag }}
          docker manifest create ${{ env.REPO_GHCR }}:$TAG \
            --amend ${{ env.REPO_GHCR }}:$TAG-ol8-amd64 \
            --amend ${{ env.REPO_GHCR }}:$TAG-ol8-arm64
          docker manifest push ${{ env.REPO_GHCR }}:$TAG
          # 更新 latest
          docker manifest create ${{ env.REPO_GHCR }}:latest \
            --amend ${{ env.REPO_GHCR }}:$TAG-ol8-amd64 \
            --amend ${{ env.REPO_GHCR }}:$TAG-ol8-arm64
          docker manifest push ${{ env.REPO_GHCR }}:latest
