name: Rebuild and Push Multi-Arch Manifest

# 触发方式：支持手动执行，也支持 Release 创建时自动触发
on:
  workflow_dispatch:
    inputs:
      ref_name:
        description: '要打 Manifest 的镜像标签（如 v1.6.10）'
        required: true
        default: 'v1.0.0'
  release:
    types: [created]

jobs:
  create-manifest:
    # 如果是 Release 触发，则只在 target_commitish == "master" 时跑
    if: >
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'release' && github.event.release.target_commitish == 'master')
    runs-on: ubuntu-latest

    steps:
      - name: 确定要用的 TAG
        # 如果是手动触发，就用 inputs.ref_name；否则用 release.tag_name
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "TAG=${{ github.event.inputs.ref_name }}" >> $GITHUB_ENV
          else
            echo "TAG=${{ github.event.release.tag_name }}" >> $GITHUB_ENV
          fi

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GHCR (GitHub Container Registry)
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUBTOKEN }}

      #####################################################################
      # 步骤 1：把远端 “${TAG}” 多架构清单拉下来，分别按平台打 TAG → 推送为“纯单平台”
      #####################################################################

      - name: Pull & Push single‐arch amd64 image to `${{ env.TAG }}-amd64`
        run: |
          # 1.1 拉取远端多架构清单里的 amd64 层。 
          #     拉取完成后，docker 会把该镜像在本地标记为 `qyg2297248353/ammds:${TAG}`（仅含 amd64 架构）。
          docker pull --platform=linux/amd64 docker.io/qyg2297248353/ammds:${TAG}

          # 1.2 给本地这个 amd64 镜像打一个 “TAG-amd64”的新标签，并推送到 DockerHub
          docker tag docker.io/qyg2297248353/ammds:${TAG} \
                     docker.io/qyg2297248353/ammds:${TAG}-amd64

          docker push docker.io/qyg2297248353/ammds:${TAG}-amd64

          # 1.3 同步推到 GHCR
          docker tag docker.io/qyg2297248353/ammds:${TAG}-amd64 \
                     ghcr.io/qyg2297248353/ammds:${TAG}-amd64
          docker push ghcr.io/qyg2297248353/ammds:${TAG}-amd64

      - name: Pull & Push single‐arch arm64 image to `${{ env.TAG }}-arm64`
        run: |
          # 2.1 拉取远端多架构清单里的 arm64 层
          docker pull --platform=linux/arm64 docker.io/qyg2297248353/ammds:${TAG}

          # 2.2 给本地这个 arm64 镜像打一个 “TAG-arm64” 的新标签，并推送到 DockerHub
          docker tag docker.io/qyg2297248353/ammds:${TAG} \
                     docker.io/qyg2297248353/ammds:${TAG}-arm64

          docker push docker.io/qyg2297248353/ammds:${TAG}-arm64

          # 2.3 同步推到 GHCR
          docker tag docker.io/qyg2297248353/ammds:${TAG}-arm64 \
                     ghcr.io/qyg2297248353/ammds:${TAG}-arm64
          docker push ghcr.io/qyg2297248353/ammds:${TAG}-arm64

      #####################################################################
      # 步骤 2：确认远端 `TAG-amd64` / `TAG-arm64` 都是纯单平台，再做多架构 manifest
      #####################################################################

      - name: Create and push DockerHub multi-arch manifest for `${{ env.TAG }}`
        run: |
          # 3.1 合并 DockerHub 上的 “TAG-amd64” 与 “TAG-arm64” 为新的 multi-arch manifest
          docker manifest create docker.io/qyg2297248353/ammds:${TAG} \
            --amend docker.io/qyg2297248353/ammds:${TAG}-amd64 \
            --amend docker.io/qyg2297248353/ammds:${TAG}-arm64

          # 3.2 推送到 DockerHub
          docker manifest push docker.io/qyg2297248353/ammds:${TAG}

          # 3.3 顺带给 `latest` 标签也打一个多架构清单（可选）
          docker manifest create docker.io/qyg2297248353/ammds:latest \
            --amend docker.io/qyg2297248353/ammds:${TAG}-amd64 \
            --amend docker.io/qyg2297248353/ammds:${TAG}-arm64

          docker manifest push docker.io/qyg2297248353/ammds:latest

      - name: Create and push GHCR multi-arch manifest for `${{ env.TAG }}`
        run: |
          # 4.1 合并 GHCR 上的 “TAG-amd64” 与 “TAG-arm64”
          docker manifest create ghcr.io/qyg2297248353/ammds:${TAG} \
            --amend ghcr.io/qyg2297248353/ammds:${TAG}-amd64 \
            --amend ghcr.io/qyg2297248353/ammds:${TAG}-arm64

          # 4.2 推送到 GHCR
          docker manifest push ghcr.io/qyg2297248353/ammds:${TAG}

          # 4.3 同样为 `latest` 打 multi-arch 清单（可选）
          docker manifest create ghcr.io/qyg2297248353/ammds:latest \
            --amend ghcr.io/qyg2297248353/ammds:${TAG}-amd64 \
            --amend ghcr.io/qyg2297248353/ammds:${TAG}-arm64

          docker manifest push ghcr.io/qyg2297248353/ammds:latest
