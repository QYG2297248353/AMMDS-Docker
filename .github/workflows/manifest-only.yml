name: Rebuild and Push Multi-Arch Manifest

on:
  workflow_dispatch:
    inputs:
      ref_name:
        description: '要打 Manifest 的镜像标签（如 v1.6.10）'
        required: true
        default: 'v1.0.0'
  release:
    types: [created]

jobs:
  create-manifest:
    if: >
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'release' && github.event.release.target_commitish == 'master')
    runs-on: ubuntu-latest

    steps:
      - name: 确定要用的 TAG
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "TAG=${{ github.event.inputs.ref_name }}" >> $GITHUB_ENV
          else
            echo "TAG=${{ github.event.release.tag_name }}" >> $GITHUB_ENV
          fi

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GHCR (GitHub Container Registry)
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUBTOKEN }}

      #####################################################################
      # 步骤 1：先尝试直接拉取 “TAG-amd64” & “TAG-arm64”（带 --platform 标记）；
      #         如果不存在，再从 “TAG”（manifest list）按平台提取并推
      #####################################################################

      - name: 准备并推送纯 amd64 镜像到 `${{ env.TAG }}-amd64`
        run: |
          set -e

          REPO_DOCKERHUB="docker.io/qyg2297248353/ammds"
          REPO_GHCR="ghcr.io/qyg2297248353/ammds"
          BASE_TAG="${TAG}"
          AMD64_TAG="${BASE_TAG}-amd64"

          echo "==> 检查 DockerHub 上是否已有 “${AMD64_TAG}”（amd64 only）"
          if docker pull --platform=linux/amd64 ${REPO_DOCKERHUB}:${AMD64_TAG}; then
            echo "✅ DockerHub 上已存在单架构 amd64 镜像：${AMD64_TAG}"
            # 同步打到 GHCR
            docker tag ${REPO_DOCKERHUB}:${AMD64_TAG} ${REPO_GHCR}:${AMD64_TAG}
            docker push ${REPO_GHCR}:${AMD64_TAG}
          else
            echo "⚠️ DockerHub 上未找到单架构 amd64 镜像。回退到从多架构 “[${BASE_TAG}]” 提取 amd64 层。"
            # 1. 拉取 “多架构” TAG 的 amd64 层
            docker pull --platform=linux/amd64 ${REPO_DOCKERHUB}:${BASE_TAG}

            # 2. 给本地这个 amd64 镜像打上 “TAG-amd64” 并推送到 DockerHub
            docker tag ${REPO_DOCKERHUB}:${BASE_TAG} ${REPO_DOCKERHUB}:${AMD64_TAG}
            docker push ${REPO_DOCKERHUB}:${AMD64_TAG}

            # 3. 同步打到 GHCR
            docker tag ${REPO_DOCKERHUB}:${AMD64_TAG} ${REPO_GHCR}:${AMD64_TAG}
            docker push ${REPO_GHCR}:${AMD64_TAG}
          fi

      - name: 准备并推送纯 arm64 镜像到 `${{ env.TAG }}-arm64`
        run: |
          set -e

          REPO_DOCKERHUB="docker.io/qyg2297248353/ammds"
          REPO_GHCR="ghcr.io/qyg2297248353/ammds"
          BASE_TAG="${TAG}"
          ARM64_TAG="${BASE_TAG}-arm64"

          echo "==> 检查 DockerHub 上是否已有 “${ARM64_TAG}”（arm64 only）"
          if docker pull --platform=linux/arm64 ${REPO_DOCKERHUB}:${ARM64_TAG}; then
            echo "✅ DockerHub 上已存在单架构 arm64 镜像：${ARM64_TAG}"
            # 同步打到 GHCR
            docker tag ${REPO_DOCKERHUB}:${ARM64_TAG} ${REPO_GHCR}:${ARM64_TAG}
            docker push ${REPO_GHCR}:${ARM64_TAG}
          else
            echo "⚠️ DockerHub 上未找到单架构 arm64 镜像。回退到从多架构 “[${BASE_TAG}]” 提取 arm64 层。"
            # 1. 拉取 “多架构” TAG 的 arm64 层
            docker pull --platform=linux/arm64 ${REPO_DOCKERHUB}:${BASE_TAG}

            # 2. 给本地这个 arm64 镜像打上 “TAG-arm64” 并推送到 DockerHub
            docker tag ${REPO_DOCKERHUB}:${BASE_TAG} ${REPO_DOCKERHUB}:${ARM64_TAG}
            docker push ${REPO_DOCKERHUB}:${ARM64_TAG}

            # 3. 同步打到 GHCR
            docker tag ${REPO_DOCKERHUB}:${ARM64_TAG} ${REPO_GHCR}:${ARM64_TAG}
            docker push ${REPO_GHCR}:${ARM64_TAG}
          fi

      #####################################################################
      # 步骤 2：现在远端一定存在 “TAG-amd64”（纯 amd64） 和 “TAG-arm64”（纯 arm64）
      #         对它们进行多架构 manifest 合并并推送
      #####################################################################

      - name: Create and push DockerHub multi-arch manifest for `${{ env.TAG }}`
        run: |
          set -e
          REPO_DOCKERHUB="docker.io/qyg2297248353/ammds"
          BASE_TAG="${TAG}"

          echo "==> 在 DockerHub 上为 ${BASE_TAG} 创建多架构 manifest..."
          docker manifest create ${REPO_DOCKERHUB}:${BASE_TAG} \
            --amend ${REPO_DOCKERHUB}:${BASE_TAG}-amd64 \
            --amend ${REPO_DOCKERHUB}:${BASE_TAG}-arm64

          echo "==> 推送 DockerHub 上的 manifest:${BASE_TAG}..."
          docker manifest push ${REPO_DOCKERHUB}:${BASE_TAG}

          echo "==> 同时为 latest 创建多架构 manifest（可选）"
          docker manifest create ${REPO_DOCKERHUB}:latest \
            --amend ${REPO_DOCKERHUB}:${BASE_TAG}-amd64 \
            --amend ${REPO_DOCKERHUB}:${BASE_TAG}-arm64

          docker manifest push ${REPO_DOCKERHUB}:latest

      - name: Create and push GHCR multi-arch manifest for `${{ env.TAG }}`
        run: |
          set -e
          REPO_GHCR="ghcr.io/qyg2297248353/ammds"
          BASE_TAG="${TAG}"

          echo "==> 在 GHCR 上为 ${BASE_TAG} 创建多架构 manifest..."
          docker manifest create ${REPO_GHCR}:${BASE_TAG} \
            --amend ${REPO_GHCR}:${BASE_TAG}-amd64 \
            --amend ${REPO_GHCR}:${BASE_TAG}-arm64

          echo "==> 推送 GHCR 上的 manifest:${BASE_TAG}..."
          docker manifest push ${REPO_GHCR}:${BASE_TAG}

          echo "==> 同时为 latest 创建多架构 manifest（可选）"
          docker manifest create ${REPO_GHCR}:latest \
            --amend ${REPO_GHCR}:${BASE_TAG}-amd64 \
            --amend ${REPO_GHCR}:${BASE_TAG}-arm64

          docker manifest push ${REPO_GHCR}:latest
